input {
  beats {
    port => 5044
  }
}

filter {
  if [fields][nginx] {
    grok {
      match => { 
        "message" => "%{IPORHOST:remote_addr} - %{USER:remote_user} \[%{HTTPDATE:time_local}\] \"(?:%{WORD:verb} %{NOTSPACE:request}(?: HTTP/%{NUMBER:httpversion})?|%{DATA:rawrequest})\" %{NUMBER:status} (?:%{NUMBER:body_bytes_sent}|-) \"%{GREEDYDATA:referrer}\" \"%{GREEDYDATA:http_user_agent}\" \"%{DATA:forwarder}\""
      }
    }
  } else if [fields][apache] {
    grok {
      match => { 
        "message" => "%{IPORHOST:client_ip} (?:%{WORD:ident}|-) (?:%{WORD:auth}|-) \[%{HTTPDATE:timestamp}\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} (?:%{NUMBER:bytes}|-) \"(?:%{URI:referrer}|-)\" \"%{GREEDYDATA:user_agent}\"
"
      }
    }
  }
   # 추가적인 필터링이 필요한 경우 여기에 추가
  # 예: mutate, date, geoip, etc

}
 
 
output {
  # 디버그 출력 사용: Logstash의 stdout 출력에 codec => rubydebug를 사용하여 데이터의 구조를 확인합니다. 
  # 이를 통해 어떤 필드에 로그 메시지가 저장되어 있는지 명확히 알 수 있습니다.
  # if [input][type] == "filestream" {
  #   stdout { codec => rubydebug }
  # }
  # else {
  # 너무 많은 정보가 뜨는게 싫으면 codec "dots" 하나의 이벤트당 .으로 표시
 
  stdout {
    codec => rubydebug
  }

  # elasticsearch {
  #   hosts => ["http://es01:9200"]
  #   # 인덱스 이름 설정
  #   index => "%{[@metadata][beat]}-%{[@metadata][version]}"
  # }
# 메타데이터 필드에 접근하기
    # Logstash로 전송된 모든 이벤트에는 Logstash에서 인덱싱 및 필터링에 사용할 수 있는 다음과 같은 메타데이터 필드가 포함되어 있습니다.
    # Filebeat는 @metadata 필드를 사용하여 Logstash에 메타데이터를 보냅니다. @metadata 필드에 대한 자세한 내용은 Logstash 문서를 참조하세요.
    # 기본값은 파일비트입니다. 이 값을 변경하려면 Filebeat 구성 파일에서 index 옵션을 설정하세요.
    # Filebeat의 현재 버전입니다.
  

  # apache,nginx 인덱스 따로 생성

  if [fields][nginx] {
    elasticsearch {
      hosts => ["http://es01:9200"]
      index => "nginx-%{+YYYY.MM.dd}"
    }
  } else if [fields][apache] {
    elasticsearch {
      hosts => ["http://es01:9200"]
      index => "apache-%{+YYYY.MM.dd}"
    }
  }

}
 